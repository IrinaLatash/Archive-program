; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!


#define use_kb835732

#define use_msi20
#define use_msi31
#define use_msi45

#define use_ie6

#define use_dotnetfx11
#define use_dotnetfx11lp

#define use_dotnetfx20
#define use_dotnetfx20lp

#define use_dotnetfx35
#define use_dotnetfx35lp

#define use_dotnetfx40
#define use_wic

#define use_dotnetfx46

#define use_mdac28
#define use_jet4sp8

#define use_sqlcompact35sp2    

#define use_sql2005express
#define use_sql2008express

#define BasicName ExtractFileName('F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm')
#define ExePath   'F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug' + BasicName + '.exe'


#define ApplicationVersion GetFileVersion('F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.exe')
#define MyAppPublisher "My Company, Inc."
#define MyAppURL "http://www.example.com/"
#define MyAppExeName "MyProg.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A76FD3B1-A5EE-4544-A161-559E3A579E3C}
AppName={#BasicName}
AppVersion={#BasicName} {#ApplicationVersion}
VersionInfoVersion={#ApplicationVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#BasicName}{#ApplicationVersion}
DefaultGroupName={#BasicName}
OutputDir=F:\Учеба 3 курс\СТП\Archive-program\Installer
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Program Files\Inno Setup 5\Examples\MyProg.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.exe.CodeAnalysisLog.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.exe.lastcodeanalysissucceeded"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.pdb"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.vshost.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.vshost.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "F:\Учеба 3 курс\СТП\Archive-program\ArchivePrgm\bin\Debug\ArchivePrgm.vshost.exe.manifest"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#BasicName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#BasicName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#BasicName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(BasicName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
// shared code for installing the products
#include "scripts\products.iss"
// helper functions
#include "scripts\products\stringversion.iss"
#include "scripts\products\winversion.iss"
#include "scripts\products\fileversion.iss"
#include "scripts\products\dotnetfxversion.iss"

// actual products
#ifdef use_iis
#include "scripts\products\iis.iss"
#endif

#ifdef use_kb835732
#include "scripts\products\kb835732.iss"
#endif

#ifdef use_msi20
#include "scripts\products\msi20.iss"
#endif
#ifdef use_msi31
#include "scripts\products\msi31.iss"
#endif
#ifdef use_msi45
#include "scripts\products\msi45.iss"
#endif

#ifdef use_ie6
#include "scripts\products\ie6.iss"
#endif

#ifdef use_dotnetfx11
#include "scripts\products\dotnetfx11.iss"
#include "scripts\products\dotnetfx11sp1.iss"
#ifdef use_dotnetfx11lp
#include "scripts\products\dotnetfx11lp.iss"
#endif
#endif

#ifdef use_dotnetfx20
#include "scripts\products\dotnetfx20.iss"
#include "scripts\products\dotnetfx20sp1.iss"
#include "scripts\products\dotnetfx20sp2.iss"
#ifdef use_dotnetfx20lp
#include "scripts\products\dotnetfx20lp.iss"
#include "scripts\products\dotnetfx20sp1lp.iss"
#include "scripts\products\dotnetfx20sp2lp.iss"
#endif
#endif

#ifdef use_dotnetfx35
//#include "scripts\products\dotnetfx35.iss"
#include "scripts\products\dotnetfx35sp1.iss"
#ifdef use_dotnetfx35lp
//#include "scripts\products\dotnetfx35lp.iss"
#include "scripts\products\dotnetfx35sp1lp.iss"
#endif
#endif

#ifdef use_dotnetfx40
#include "scripts\products\dotnetfx40client.iss"
#include "scripts\products\dotnetfx40full.iss"
#endif

#ifdef use_dotnetfx46
#include "scripts\products\dotnetfx46.iss"
#endif

#ifdef use_wic
#include "scripts\products\wic.iss"
#endif

#ifdef use_msiproduct
#include "scripts\products\msiproduct.iss"
#endif
#ifdef use_vc2005
#include "scripts\products\vcredist2005.iss"
#endif
#ifdef use_vc2008
#include "scripts\products\vcredist2008.iss"
#endif
#ifdef use_vc2010
#include "scripts\products\vcredist2010.iss"
#endif

#ifdef use_mdac28
#include "scripts\products\mdac28.iss"
#endif
#ifdef use_jet4sp8
#include "scripts\products\jet4sp8.iss"
#endif


function InitializeSetup(): boolean;
begin
	// initialize windows version
	initwinversion();

#ifdef use_iis
	if (not iis()) then exit;
#endif

#ifdef use_msi20
	msi20('2.0'); // min allowed version is 2.0
#endif
#ifdef use_msi31
	msi31('3.1'); // min allowed version is 3.1
#endif
#ifdef use_msi45
	msi45('4.5'); // min allowed version is 4.5
#endif
#ifdef use_ie6
	ie6('5.0.2919'); // min allowed version is 5.0.2919
#endif


	// install .netfx 2.0 sp2 if possible; if not sp1 if possible; if not .netfx 2.0
#ifdef use_dotnetfx20
	// check if .netfx 2.0 can be installed on this OS
	if not minwinspversion(5, 0, 3) then begin
		msgbox(fmtmessage(custommessage('depinstall_missing'), [fmtmessage(custommessage('win_sp_title'), ['2000', '3'])]), mberror, mb_ok);
		exit;
	end;
	if not minwinspversion(5, 1, 2) then begin
		msgbox(fmtmessage(custommessage('depinstall_missing'), [fmtmessage(custommessage('win_sp_title'), ['XP', '2'])]), mberror, mb_ok);
		exit;
	end;

	if minwinversion(5, 1) then begin
		dotnetfx20sp2();
#ifdef use_dotnetfx20lp
		dotnetfx20sp2lp();
#endif
	end else begin
		if minwinversion(5, 0) and minwinspversion(5, 0, 4) then begin
#ifdef use_kb835732
			kb835732();
#endif
			dotnetfx20sp1();
#ifdef use_dotnetfx20lp
			dotnetfx20sp1lp();
#endif
		end else begin
			dotnetfx20();
#ifdef use_dotnetfx20lp
			dotnetfx20lp();
#endif
		end;
	end;
#endif

#ifdef use_wic
	wic();
#endif


#ifdef use_mdac28
	mdac28('2.7'); // min allowed version is 2.7
#endif
#ifdef use_jet4sp8
	jet4sp8('4.0.8015'); // min allowed version is 4.0.8015
#endif



	Result := true;
end;
